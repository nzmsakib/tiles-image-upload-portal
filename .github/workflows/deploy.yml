name: Deployment Generator
on:
  push:
    branches:
      - main
  
jobs:
  check-secrets:
    name: Check secrets
    runs-on: ubuntu-20.04

    steps:
    - name: Check secrets
      run: |
        if [ -z "${{ secrets.HOST }}" ]; then
          echo "HOST is not set";
          exit 1;
        fi
        if [ -z "${{ secrets.USER }}" ]; then
          echo "USER is not set";
          exit 1;
        fi
        if [ -z "${{ secrets.KEY }}" ]; then
          echo "KEY is not set";
          exit 1;
        fi
        if [ -z "${{ secrets.PORT }}" ]; then
          echo "PORT is not set";
          exit 1;
        fi
        if [ -z "${{ secrets.DEPLOY_DIRECTORY }}" ]; then
          echo "DEPLOY_DIRECTORY is not set";
          exit 1;
        fi

  create-deployment:
    name: Create Deployment
    needs: check-secrets
    runs-on: ubuntu-20.04
    
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: Install npm dependencies and build
      run: npm install && npm run build

    - name: Configure PHP 8.0.28
      uses: shivammathur/setup-php@master
      with:
        php-version: 8.0.28
        extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml, zip
    - name: Install composer dependencies
      run: composer install --no-interaction --prefer-dist

    - name: Generate deployment
      run: tar -czf ${{ github.sha }}.tar.gz --exclude .git --exclude .github --exclude .gitignore --exclude README.md --exclude .gitattributes --exclude .vscode --exclude .env *

    - name: Upload deployment
      uses: actions/upload-artifact@v3
      with:
        name: app-build
        path: ${{ github.sha }}.tar.gz
      
  release-on-server:
    name: Release on server
    needs: create-deployment
    runs-on: ubuntu-20.04
    env:
      DEPLOY_DIRECTORY: /home/${{ secrets.SSH_USER }}/${{ secrets.DEPLOY_DIRECTORY }}
    steps:
    - name: Download deployment
      uses: actions/download-artifact@v3
      with:
        name: app-build
    - name: Upload deployment
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: ${{ github.sha }}.tar.gz
        target: ${{ env.DEPLOY_DIRECTORY }}/
    - name: Unzip deployment and remove zip
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          tar -xzf ${{ env.DEPLOY_DIRECTORY }}/${{ github.sha }}.tar.gz -C ${{ env.DEPLOY_DIRECTORY }}
          rm ${{ env.DEPLOY_DIRECTORY }}/${{ github.sha }}.tar.gz
    - name: Execute post-deploy.sh script
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd ${{ env.DEPLOY_DIRECTORY }}
          if [ -f post-deploy.sh ]; then
            chmod +x post-deploy.sh
            ./post-deploy.sh
            chmod -x post-deploy.sh
          fi